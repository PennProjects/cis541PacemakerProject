<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
clock b; 

broadcast chan pace, sense; 

int highRateInterval = 600; 
int lowRateInterval = 1500; 

int vrp_min = 150;
int vrp_max = 500;</declaration>
	<template>
		<name x="5" y="5">RandomHeart</name>
		<declaration>// Place local declarations here.

// internal clock 
clock t;
int maxBeat = 1500;
int minBeat = 600;  
</declaration>
		<location id="id0" x="-297" y="-127">
			<name x="-348" y="-153">Ready</name>
			<label kind="invariant" x="-425" y="-136">t &lt;= lowRateInterval</label>
		</location>
		<location id="id1" x="-34" y="-127">
			<name x="-25" y="-161">Idle</name>
			<label kind="invariant" x="-17" y="-119">t &lt; vrp_max</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-221" y="-59">t &gt;= vrp_min</label>
			<label kind="assignment" x="-187" y="-42">t := 0</label>
			<nail x="-34" y="-59"/>
			<nail x="-297" y="-59"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-195" y="-153">pace?</label>
			<label kind="assignment" x="-187" y="-127">t:=0</label>
			<nail x="-110" y="-127"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-212" y="-255">t &gt;= highRateInterval</label>
			<label kind="synchronisation" x="-187" y="-238">sense!</label>
			<label kind="assignment" x="-178" y="-221">t:=0</label>
			<nail x="-297" y="-195"/>
			<nail x="-34" y="-195"/>
			<nail x="-34" y="-153"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Pacemaker</name>
		<declaration>// Place local declarations here.

int vrp_min = 150;
int vrp_max = 500;
bool heartPaced;
bool heartPaceEnable;

// refactor clock for pacemaker
clock t; 

int rateInterval; </declaration>
		<location id="id2" x="76" y="-306">
			<name x="61" y="-342">Idle</name>
			<label kind="invariant" x="19" y="-359">t &lt;= rateInterval</label>
		</location>
		<location id="id3" x="76" y="-59">
			<name x="60" y="-43">Wait</name>
			<label kind="invariant" x="44" y="-27">t &lt; vrp_max</label>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="323" y="-213">sense?</label>
			<label kind="assignment" x="331" y="-187">t=0, 
rateInterval = highRateInterval,
heartPaced =false</label>
			<nail x="314" y="-306"/>
			<nail x="314" y="-59"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-51" y="-212">t &gt;= rateInterval</label>
			<label kind="synchronisation" x="-24" y="-192">pace!</label>
			<label kind="assignment" x="-85" y="-187">t=0,
rateInterval=lowRateInterval,
heartPaced = true</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-327" y="-204">t &gt;= vrp_min</label>
			<label kind="assignment" x="-399" y="-187">heartPaceEnable :=heartPaced</label>
			<nail x="-263" y="-68"/>
			<nail x="-263" y="-308"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Observer</name>
		<declaration>// Place local declarations here.
bool ventricleStarted; 

clock ventricleIntervalTime; </declaration>
		<location id="id4" x="263" y="-119">
			<name x="253" y="-149">Paced</name>
			<committed/>
		</location>
		<location id="id5" x="34" y="-119">
			<name x="24" y="-149">Wait</name>
		</location>
		<location id="id6" x="-221" y="-119">
			<name x="-253" y="-151">Sensed</name>
			<committed/>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-110" y="-144">sense?</label>
			<label kind="assignment" x="-170" y="-170">ventricleStarted = false</label>
			<nail x="-93" y="-153"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="assignment" x="93" y="-76">ventricleStarted = true,
ventricleIntervalTime = 0</label>
			<nail x="153" y="-85"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="136" y="-144">pace?</label>
			<label kind="assignment" x="76" y="-170">ventricleStarted = false</label>
			<nail x="153" y="-153"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="assignment" x="-161" y="-85">ventricleStarted= true,
ventricleIntervalTime = 0</label>
			<nail x="-93" y="-85"/>
		</transition>
	</template>
	<system>// List one or more processes to be composed into a system.
system RandomHeart, Pacemaker, Observer;</system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Observer.Paced imply (Observer.ventricleIntervalTime &lt;= lowRateInterval)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Pacemaker.heartPaced  imply (Observer.ventricleIntervalTime &gt;= 0)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Pacemaker.heartPaceEnable imply (Observer.ventricleIntervalTime &lt;= lowRateInterval)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Observer.Paced imply (Observer.ventricleIntervalTime &gt;= highRateInterval)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] (Observer.ventricleIntervalTime &lt;= lowRateInterval)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] (Observer.ventricleIntervalTime &gt;= highRateInterval)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; RandomHeart.Ready imply RandomHeart.Idle</formula>
			<comment></comment>
		</query>
		<query>
			<formula>RandomHeart.Ready --&gt; RandomHeart.Idle</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Pacemaker.Wait</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pacemaker.Idle --&gt; Pacemaker.Wait</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Observer.Sensed --&gt; Observer.Wait

	</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
